# Generated by Django 5.1.4 on 2025-09-11 11:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who created this record",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who last updated this record",
                        null=True,
                    ),
                ),
                (
                    "organization_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Organization ID from Identity Service for multi-tenant isolation",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Mark record as deleted without actually removing it",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when record was soft deleted",
                        null=True,
                    ),
                ),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who deleted this record",
                        null=True,
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        help_text="User ID from Identity Service who performed the action"
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("view", "View"),
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("export", "Export"),
                            ("print", "Print"),
                            ("access", "Access"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        help_text="Type of resource accessed (Contact, Appointment, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "resource_id",
                    models.UUIDField(
                        blank=True, help_text="ID of the specific resource", null=True
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the action"),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("session_id", models.UUIDField(blank=True, null=True)),
                (
                    "previous_values",
                    models.JSONField(
                        blank=True, help_text="Previous values before change", null=True
                    ),
                ),
                (
                    "new_values",
                    models.JSONField(
                        blank=True, help_text="New values after change", null=True
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="low",
                        max_length=20,
                    ),
                ),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user_id", "created_at"],
                        name="business_au_user_id_d32efa_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "resource_id"],
                        name="business_au_resourc_464926_idx",
                    ),
                    models.Index(
                        fields=["action_type", "created_at"],
                        name="business_au_action__e573bc_idx",
                    ),
                    models.Index(
                        fields=["risk_level", "created_at"],
                        name="business_au_risk_le_16e79b_idx",
                    ),
                    models.Index(
                        fields=["success", "created_at"],
                        name="business_au_success_13cbb8_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who created this record",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who last updated this record",
                        null=True,
                    ),
                ),
                (
                    "organization_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Organization ID from Identity Service for multi-tenant isolation",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Mark record as deleted without actually removing it",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when record was soft deleted",
                        null=True,
                    ),
                ),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who deleted this record",
                        null=True,
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("patient", "Patient"),
                            ("provider", "Healthcare Provider"),
                            ("vendor", "Vendor"),
                            ("staff", "Staff Member"),
                            ("other", "Other"),
                        ],
                        default="patient",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("mr", "Mr."),
                            ("mrs", "Mrs."),
                            ("ms", "Ms."),
                            ("dr", "Dr."),
                            ("prof", "Prof."),
                        ],
                        max_length=10,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("mobile", models.CharField(blank=True, max_length=20)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                (
                    "country",
                    models.CharField(blank=True, default="France", max_length=100),
                ),
                ("medical_record_number", models.CharField(blank=True, max_length=50)),
                ("insurance_number", models.CharField(blank=True, max_length=50)),
                ("company", models.CharField(blank=True, max_length=200)),
                ("job_title", models.CharField(blank=True, max_length=100)),
                (
                    "preferred_language",
                    models.CharField(
                        default="fr",
                        help_text="Language preference (fr, en, de)",
                        max_length=10,
                    ),
                ),
                (
                    "communication_preference",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("sms", "SMS"),
                            ("mail", "Mail"),
                        ],
                        default="email",
                        max_length=20,
                    ),
                ),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=200),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "consent_given",
                    models.BooleanField(
                        default=False, help_text="RGPD consent for data processing"
                    ),
                ),
                ("consent_date", models.DateTimeField(blank=True, null=True)),
                (
                    "data_retention_until",
                    models.DateField(
                        blank=True, help_text="Data retention expiry date", null=True
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["contact_type", "organization_id"],
                        name="business_co_contact_845040_idx",
                    ),
                    models.Index(
                        fields=["last_name", "first_name"],
                        name="business_co_last_na_e3898b_idx",
                    ),
                    models.Index(fields=["email"], name="business_co_email_1f2ce7_idx"),
                    models.Index(
                        fields=["medical_record_number"],
                        name="business_co_medical_fbd1c8_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("email__gt", "")),
                        fields=("email", "organization_id"),
                        name="unique_email_per_organization",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("medical_record_number__gt", "")),
                        fields=("medical_record_number", "organization_id"),
                        name="unique_medical_record_per_organization",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who created this record",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who last updated this record",
                        null=True,
                    ),
                ),
                (
                    "organization_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Organization ID from Identity Service for multi-tenant isolation",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Mark record as deleted without actually removing it",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when record was soft deleted",
                        null=True,
                    ),
                ),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who deleted this record",
                        null=True,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("start_datetime", models.DateTimeField()),
                ("end_datetime", models.DateTimeField()),
                ("timezone", models.CharField(default="Europe/Paris", max_length=50)),
                (
                    "appointment_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("follow_up", "Follow-up"),
                            ("procedure", "Procedure"),
                            ("surgery", "Surgery"),
                            ("meeting", "Business Meeting"),
                            ("other", "Other"),
                        ],
                        default="consultation",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                            ("rescheduled", "Rescheduled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=3,
                        help_text="Priority 1=Urgent, 5=Low",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "assigned_provider",
                    models.UUIDField(
                        blank=True,
                        help_text="Provider ID from Identity Service",
                        null=True,
                    ),
                ),
                (
                    "assigned_staff",
                    models.UUIDField(
                        blank=True,
                        help_text="Staff member ID from Identity Service",
                        null=True,
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Room, building, or location",
                        max_length=200,
                    ),
                ),
                ("required_equipment", models.TextField(blank=True)),
                (
                    "estimated_duration_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("billing_code", models.CharField(blank=True, max_length=50)),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("insurance_authorized", models.BooleanField(default=False)),
                ("preparation_notes", models.TextField(blank=True)),
                ("post_appointment_notes", models.TextField(blank=True)),
                ("requires_follow_up", models.BooleanField(default=False)),
                ("follow_up_date", models.DateField(blank=True, null=True)),
                ("reminder_sent", models.BooleanField(default=False)),
                ("confirmation_required", models.BooleanField(default=True)),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="business.contact",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who created this record",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who last updated this record",
                        null=True,
                    ),
                ),
                (
                    "organization_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Organization ID from Identity Service for multi-tenant isolation",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Mark record as deleted without actually removing it",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when record was soft deleted",
                        null=True,
                    ),
                ),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who deleted this record",
                        null=True,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("medical_record", "Medical Record"),
                            ("lab_result", "Lab Result"),
                            ("imaging", "Medical Imaging"),
                            ("prescription", "Prescription"),
                            ("invoice", "Invoice"),
                            ("contract", "Contract"),
                            ("report", "Report"),
                            ("consent_form", "Consent Form"),
                            ("insurance", "Insurance Document"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                (
                    "file_path",
                    models.CharField(
                        blank=True,
                        help_text="Path to file in storage system",
                        max_length=500,
                    ),
                ),
                ("file_size_bytes", models.BigIntegerField(blank=True, null=True)),
                ("mime_type", models.CharField(blank=True, max_length=100)),
                ("checksum_md5", models.CharField(blank=True, max_length=32)),
                (
                    "privacy_level",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("internal", "Internal"),
                            ("confidential", "Confidential"),
                            ("restricted", "Restricted"),
                        ],
                        default="internal",
                        max_length=20,
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of tags for categorization",
                    ),
                ),
                ("version", models.PositiveSmallIntegerField(default=1)),
                (
                    "retention_until",
                    models.DateField(
                        blank=True,
                        help_text="Document retention expiry date",
                        null=True,
                    ),
                ),
                (
                    "is_encrypted",
                    models.BooleanField(
                        default=True,
                        help_text="Whether the document is encrypted at rest",
                    ),
                ),
                (
                    "access_log_required",
                    models.BooleanField(
                        default=True,
                        help_text="Whether access to this document should be logged",
                    ),
                ),
                ("requires_approval", models.BooleanField(default=False)),
                ("approved", models.BooleanField(default=False)),
                (
                    "approved_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID who approved the document",
                        null=True,
                    ),
                ),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "parent_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="versions",
                        to="business.document",
                    ),
                ),
                (
                    "related_appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="business.appointment",
                    ),
                ),
                (
                    "related_contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="business.contact",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who created this record",
                        null=True,
                    ),
                ),
                (
                    "updated_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who last updated this record",
                        null=True,
                    ),
                ),
                (
                    "organization_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Organization ID from Identity Service for multi-tenant isolation",
                        null=True,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="Mark record as deleted without actually removing it",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when record was soft deleted",
                        null=True,
                    ),
                ),
                (
                    "deleted_by",
                    models.UUIDField(
                        blank=True,
                        help_text="User ID from Identity Service who deleted this record",
                        null=True,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        help_text="External transaction ID", max_length=100, unique=True
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("payment", "Payment Received"),
                            ("charge", "Service Charge"),
                            ("refund", "Refund"),
                            ("adjustment", "Adjustment"),
                            ("fee", "Fee"),
                            ("subscription", "Subscription"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("currency", models.CharField(default="EUR", max_length=3)),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cash", "Cash"),
                            ("card", "Credit/Debit Card"),
                            ("bank_transfer", "Bank Transfer"),
                            ("check", "Check"),
                            ("insurance", "Insurance"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("payment_reference", models.CharField(blank=True, max_length=200)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("invoice_number", models.CharField(blank=True, max_length=100)),
                ("billing_period_start", models.DateField(blank=True, null=True)),
                ("billing_period_end", models.DateField(blank=True, null=True)),
                ("due_date", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("requires_receipt", models.BooleanField(default=True)),
                ("receipt_sent", models.BooleanField(default=False)),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="business.contact",
                    ),
                ),
                (
                    "related_appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="business.appointment",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["start_datetime", "organization_id"],
                name="business_ap_start_d_221430_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["status", "organization_id"],
                name="business_ap_status_bb619d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["contact", "start_datetime"],
                name="business_ap_contact_8cd469_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["assigned_provider", "start_datetime"],
                name="business_ap_assigne_086a86_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="appointment",
            index=models.Index(
                fields=["appointment_type"], name="business_ap_appoint_2d179f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["document_type", "organization_id"],
                name="business_do_documen_a1af64_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["related_contact", "document_type"],
                name="business_do_related_156876_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["privacy_level"], name="business_do_privacy_461ff1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="document",
            index=models.Index(
                fields=["created_at", "organization_id"],
                name="business_do_created_3ef9c9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_id"], name="business_tr_transac_55e694_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["status", "organization_id"],
                name="business_tr_status_4d96e9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["contact", "payment_date"],
                name="business_tr_contact_a65785_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_type", "created_at"],
                name="business_tr_transac_82f8f7_idx",
            ),
        ),
    ]
