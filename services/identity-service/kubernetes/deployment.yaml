apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: microservices
  labels:
    app: auth-service
    version: v1
spec:
  replicas: 3  # High availability
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: auth-service
        image: auth-service:latest
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        - containerPort: 50051
          name: grpc
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: auth-service-secrets
              key: secret-key
        - name: SERVICE_PORT
          value: "8001"
        - name: CONSUL_HOST
          value: "consul-service"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: auth-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: microservices
  labels:
    app: auth-service
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  - port: 50051
    targetPort: 50051
    protocol: TCP
    name: grpc
  selector:
    app: auth-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: microservices
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: microservices
data:
  redis-url: "redis://redis-service:6379/0"
  consul-host: "consul-service"
  service-port: "8001"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: microservices
type: Opaque
stringData:
  database-url: "postgresql+asyncpg://auth_user:auth_password@postgres-service:5432/auth_service"
  secret-key: "your-secret-jwt-key-here"