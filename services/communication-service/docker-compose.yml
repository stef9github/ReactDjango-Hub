version: '3.8'

services:
  communication-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: communication-service
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=communication-service
      - SERVICE_VERSION=1.0.0
      - SERVICE_PORT=8003
      - DATABASE_URL=postgresql+asyncpg://communication_user:communication_pass@communication-db:5432/communication_service
      - REDIS_URL=redis://communication-redis:6379/0
      - IDENTITY_SERVICE_URL=http://identity-service:8001
      - LOG_LEVEL=INFO
    env_file:
      - ../.env.shared    # Load shared configuration first
      - .env              # Then service-specific configuration
    depends_on:
      - communication-db
      - communication-redis
    volumes:
      - communication_uploads:/app/uploads
      - communication_logs:/app/logs
    restart: unless-stopped
    networks:
      - communication-network
      - services-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  communication-db:
    image: postgres:17-alpine
    container_name: communication-db
    environment:
      - POSTGRES_DB=communication_service
      - POSTGRES_USER=communication_user
      - POSTGRES_PASSWORD=communication_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5435:5432"  # External port for development access
    volumes:
      - communication_db_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d  # Initialization scripts
    restart: unless-stopped
    networks:
      - communication-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U communication_user -d communication_service"]
      interval: 10s
      timeout: 5s
      retries: 5

  communication-redis:
    image: redis:7-alpine
    container_name: communication-redis
    command: redis-server --appendonly yes --requirepass communication_redis_password
    ports:
      - "6382:6379"  # External port for development access
    volumes:
      - communication_redis_data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - communication-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "communication_redis_password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Optional: Celery worker for background tasks
  communication-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: communication-worker
    environment:
      - SERVICE_NAME=communication-worker
      - DATABASE_URL=postgresql+asyncpg://communication_user:communication_pass@communication-db:5432/communication_service
      - REDIS_URL=redis://communication-redis:6379/0
      - CELERY_BROKER_URL=redis://communication-redis:6379/1
      - LOG_LEVEL=INFO
    env_file:
      - ../.env.shared
      - .env
    depends_on:
      - communication-db
      - communication-redis
    volumes:
      - communication_uploads:/app/uploads
      - communication_logs:/app/logs
    restart: unless-stopped
    networks:
      - communication-network
    command: ["celery", "-A", "celery_app", "worker", "--loglevel=info"]
    profiles:
      - worker  # Only start when explicitly requested

volumes:
  communication_db_data:
    driver: local
  communication_redis_data:
    driver: local
  communication_uploads:
    driver: local
  communication_logs:
    driver: local

networks:
  communication-network:
    driver: bridge
  services-network:
    external: true  # Shared network for inter-service communication