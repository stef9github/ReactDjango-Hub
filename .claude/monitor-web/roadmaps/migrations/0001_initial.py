# Generated by Django 5.2.6 on 2025-09-14 07:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("platform", "Platform/Generic"),
                            ("specific", "Industry Specific"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("critical", "Critical"),
                            ("high", "High"),
                            ("medium", "Medium"),
                            ("low", "Low"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("proposed", "Proposed"),
                            ("approved", "Approved"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("on_hold", "On Hold"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="proposed",
                        max_length=20,
                    ),
                ),
                (
                    "quarter",
                    models.CharField(
                        choices=[
                            ("Q1", "Q1"),
                            ("Q2", "Q2"),
                            ("Q3", "Q3"),
                            ("Q4", "Q4"),
                        ],
                        max_length=10,
                    ),
                ),
                ("year", models.IntegerField()),
                ("effort_days", models.IntegerField(blank=True, null=True)),
                ("technical_components", models.JSONField(default=list)),
                ("api_endpoints", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_reusable", models.BooleanField(default=False)),
                ("platform_score", models.FloatField(default=0.0)),
            ],
            options={
                "ordering": ["year", "quarter", "-priority"],
            },
        ),
        migrations.CreateModel(
            name="ProductManager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("surgical", "Surgical Practice Management"),
                            ("procurement", "Public Procurement"),
                            ("platform", "Platform/Generic"),
                        ],
                        max_length=20,
                    ),
                ),
                ("agent_name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="PlatformBacklog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("platform_priority", models.IntegerField()),
                ("business_value", models.IntegerField()),
                ("technical_complexity", models.IntegerField()),
                ("products_benefited", models.JSONField(default=list)),
                ("estimated_savings_hours", models.IntegerField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="roadmaps.feature",
                    ),
                ),
            ],
            options={
                "ordering": ["platform_priority"],
            },
        ),
        migrations.CreateModel(
            name="ApprovalWorkflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_state",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pm_review", "PM Review"),
                            ("tech_review", "Technical Review"),
                            ("documentation", "Documentation"),
                            ("user_approval", "User Approval"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("assigned_techlead", models.CharField(blank=True, max_length=100)),
                ("assigned_agents", models.JSONField(default=list)),
                ("technical_doc", models.TextField(blank=True)),
                ("implementation_plan", models.TextField(blank=True)),
                ("test_plan", models.TextField(blank=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "feature",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workflow",
                        to="roadmaps.feature",
                    ),
                ),
                (
                    "assigned_pm",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_workflows",
                        to="roadmaps.productmanager",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Roadmap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "product_manager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roadmaps",
                        to="roadmaps.productmanager",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="feature",
            name="roadmap",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="features",
                to="roadmaps.roadmap",
            ),
        ),
        migrations.CreateModel(
            name="WorkflowHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_state", models.CharField(max_length=20)),
                ("to_state", models.CharField(max_length=20)),
                ("notes", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="roadmaps.approvalworkflow",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="FeatureDependency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dependency_type", models.CharField(max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "depends_on",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dependents",
                        to="roadmaps.feature",
                    ),
                ),
                (
                    "feature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dependencies",
                        to="roadmaps.feature",
                    ),
                ),
            ],
            options={
                "unique_together": {("feature", "depends_on")},
            },
        ),
        migrations.CreateModel(
            name="FeatureOverlap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("similarity_score", models.FloatField()),
                ("overlap_type", models.CharField(max_length=50)),
                ("platform_candidate", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "feature1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overlaps_as_feature1",
                        to="roadmaps.feature",
                    ),
                ),
                (
                    "feature2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overlaps_as_feature2",
                        to="roadmaps.feature",
                    ),
                ),
            ],
            options={
                "unique_together": {("feature1", "feature2")},
            },
        ),
        migrations.CreateModel(
            name="RoadmapSync",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_sync", models.DateTimeField()),
                ("features_synced", models.IntegerField(default=0)),
                ("overlaps_identified", models.IntegerField(default=0)),
                ("platform_candidates", models.IntegerField(default=0)),
                ("sync_notes", models.JSONField(default=dict)),
                (
                    "source_roadmap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="syncs_as_source",
                        to="roadmaps.roadmap",
                    ),
                ),
                (
                    "target_roadmap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="syncs_as_target",
                        to="roadmaps.roadmap",
                    ),
                ),
            ],
            options={
                "unique_together": {("source_roadmap", "target_roadmap")},
            },
        ),
    ]
