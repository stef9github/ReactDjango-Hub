#!/bin/bash
# Launch script for Claude Code Expert Agent
# Generated by Agent Configurator

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ Launching Claude Code Expert Agent${NC}"
echo -e "${YELLOW}Claude Code optimization specialist for agent configuration, workflow automation, and development efficiency${NC}"
echo ""

# Set working directory
WORKDIR="."
cd "$(dirname "$0")/../../../$WORKDIR"

# Export environment variables
export CLAUDE_CODE_EXPERT="true"
export OPTIMIZATION_MODE="enabled"
export PYTHONPATH="."

# Display agent information
echo "üìÅ Working Directory: $(pwd)"
echo "üîß Available Tools: Bash, Read, Write, Edit, MultiEdit, Grep, Glob, Task, WebSearch, WebFetch, TodoWrite"
echo ""

# Display permissions
echo "üìù Permissions:"
echo "  Read: **..."
echo "  Write: .claude/**, **/.claude/**, **/CLAUDE.md..."
echo "  Execute: python, pip, npm..."
echo ""

# Display restrictions
echo "‚ö†Ô∏è  Restrictions:"
echo "  - Focus on optimization and efficiency improvements"
echo "  - Must maintain backward compatibility"
echo "  - Should document all configuration changes"
echo "  - Must test configurations before deployment"

echo ""

# Display available aliases
echo "üîó Available Aliases:"
echo "  configure: python .claude/agent_configurator.py"
echo "  launch: ./launch_agent.sh"
echo "  optimize: python .claude/agent_configurator.py optimize"
echo "  validate-all: python .claude/agent_configurator.py validate-all"
echo "  agent-status: python .claude/agent_configurator.py status"
echo "  create-agent: python .claude/agent_configurator.py create"
echo "  lint-configs: python .claude/agent_configurator.py lint"
echo "  backup-configs: python .claude/agent_configurator.py backup"

echo ""
echo -e "${GREEN}‚úÖ Agent is configured and ready!${NC}"
echo ""
echo "You can now start working with this specialized agent configuration."
echo "All operations will be scoped to the defined permissions and restrictions."
