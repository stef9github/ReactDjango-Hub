{
  "permissions": {
    "allow": [
      "Bash(cd:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(celery:*)",
      "Bash(mv:*)",
      "Bash(python manage.py:*)",
      "Bash(python manage.py runserver:*)",
      "Bash(python manage.py shell:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(pip install:*)",
      "Bash(kill:*)",
      "Bash(node:*)"
    ],
    "deny": []
  }
}


{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npx prisma:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      "Bash(npm run:*)",
      "Bash(npm install)",
      "Bash(chmod:*)",
      "Bash(psql:*)",
      "Bash(npm install:*)",
      "Bash(tree:*)",
      "Bash(node:*)",
      "Bash(./scripts/aws-test-manager.sh:*)",
      "Bash(ssh:*)",
      "Bash(export AWS_KEY_NAME=\"jobtailor\")",
      "Bash(aws ec2 allocate-address:*)",
      "Bash(aws ec2 associate-address:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git status)",
      "Bash(git log:*)",
      "Bash(git diff:*)",
      "Bash(rsync:*)",
      "Bash(./scripts/auto-commit.sh:*)",
      "Bash(./scripts/sync-and-commit.sh:*)",
      "Bash(find:*)",
      "Bash(./test-all-services.sh:*)",
      "Bash(npx tsc:*)",
      "Bash(npm ls:*)",
      "Bash(for:*)",
      "Bash(tail:*)",
      "Bash(done)",
      "Bash(./scripts/deploy-to-instance.sh:*)",
      "Bash(scp:*)",
      "Bash(gh run list:*)",
      "Bash(aws iam list-attached-user-policies:*)",
      "Bash(aws iam attach-user-policy:*)",
      "Bash(git push:*)",
      "Bash(echo:*)",
      "Bash(./scripts/ec2-systematic-recovery.sh:*)",
      "Read(/Users/stephanerichard/Documents/CODING/**)",
      "Bash(bash:*)",
      "Bash(docker build:*)",
      "Bash(./scripts/generate-ssl-certs.sh:*)",
      "Bash(nslookup:*)",
      "Bash(aws ec2 authorize-security-group-ingress:*)",
      "Bash(npm test:*)",
      "Bash(/Users/stephanerichard/Documents/CODING/JobTailor/ )",
      "Bash(ubuntu@52.2.58.6:/home/ubuntu/jobtailor/ )",
      "Bash(/Users/stephanerichard/Documents/CODING/JobTailor/frontend/dist/ )",
      "Bash(ubuntu@52.2.58.6:/home/ubuntu/jobtailor/frontend/dist/)",
      "Bash(docker context create:*)",
      "Bash(brew list:*)",
      "Bash(brew install:*)",
      "Read(/Applications/**)",
      "Read(/Applications/**)",
      "Bash(./scripts/deploy-ec2-production.sh:*)",
      "Bash(./scripts/test-production-client.sh:*)",
      "Bash(./scripts/test-api-endpoints.sh:*)",
      "Bash(timeout:*)",
      "Bash(./scripts/test-frontend-functionality.sh:*)",
      "Bash(aws ec2 wait:*)",
      "Bash(aws ec2 modify-instance-attribute:*)",
      "Bash(aws ec2 start-instances:*)",
      "Bash(aws ec2 describe-instances:*)",
      "Read(/Users/stephanerichard/.ssh/**)",
      "Bash(aws ssm:*)",
      "Bash(aws ec2 stop-instances:*)",
      "Bash(nmap:*)",
      "Bash(aws ec2 describe-instance-status:*)",
      "Bash(aws ec2 detach-volume:*)",
      "Bash(aws ec2:*)",
      "Bash(git rm:*)",
      "Bash(docker-compose:*)",
      "Bash(docker stop:*)",
      "Bash(docker system prune:*)",
      "Bash(docker:*)",
      "Bash(npx eslint:*)",
      "Bash(git reset:*)",
      "Bash(grep:*)",
      "Bash(do if grep -q \"req: Request\" \"$file\")",
      "Bash(then echo \"USES Request: $file\")",
      "Bash(else echo \"NO Request: $file\")",
      "Bash(fi)",
      "Bash(lsof:*)",
      "Bash(kill:*)",
      "Bash(./scripts/dev-logs.sh:*)",
      "Bash(./scripts/dev-stop.sh:*)",
      "Bash(./scripts/dev-start.sh:*)",
      "Bash(gtimeout:*)"
    ],
    "deny": [],
    "ask": []
  }
}