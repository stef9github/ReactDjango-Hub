{
  "permissions": {
    "allow": [
      "Bash(cd:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(chmod:*)",
      "Bash(kill:*)",
      "Bash(ps:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(tree:*)",
      "Bash(wc:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(lsof:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(nslookup:*)",
      "Bash(nmap:*)",
      
      "Bash(git:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git status)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git checkout:*)",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(git reset:*)",
      "Bash(git rm:*)",
      
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pip:*)",
      "Bash(pip install:*)",
      "Bash(pip install)",
      "Bash(pip list:*)",
      "Bash(pip freeze:*)",
      "Bash(python manage.py:*)",
      "Bash(python manage.py runserver:*)",
      "Bash(python manage.py shell:*)",
      "Bash(python manage.py migrate:*)",
      "Bash(python manage.py makemigrations:*)",
      "Bash(python manage.py test:*)",
      "Bash(python manage.py collectstatic:*)",
      "Bash(python manage.py createsuperuser:*)",
      "Bash(python manage.py dbshell:*)",
      "Bash(python test:*)",
      "Bash(python scripts:*)",
      
      "Bash(celery:*)",
      "Bash(redis-cli:*)",
      "Bash(redis-server:*)",
      
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(npm run:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(npm run lint:*)",
      "Bash(npm start:*)",
      "Bash(npm ls:*)",
      "Bash(npx:*)",
      "Bash(npx tsc:*)",
      "Bash(npx eslint:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      
      "Bash(psql:*)",
      "Bash(postgresql:*)",
      "Bash(pg_dump:*)",
      "Bash(pg_restore:*)",
      "Bash(createdb:*)",
      "Bash(dropdb:*)",
      "Bash(pg_isready:*)",
      "Bash(initdb:*)",
      "Bash(pg_ctl:*)",
      "Bash(pg_config:*)",
      "Bash(vacuumdb:*)",
      "Bash(reindexdb:*)",
      
      "Bash(docker:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)",
      "Bash(docker ps:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(docker stop:*)",
      "Bash(docker system prune:*)",
      "Bash(docker context create:*)",
      "Bash(docker-compose:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker compose:*)",
      
      "Bash(./scripts/setup-medical-db.sh:*)",
      "Bash(./scripts/setup-postgresql.sh:*)",
      "Bash(./scripts/sync-requirements.py:*)",
      "Bash(./scripts/install-git-hooks.py:*)",
      "Bash(./scripts/test-hipaa-compliance.sh:*)",
      "Bash(./scripts/dev-start.sh:*)",
      "Bash(./scripts/dev-stop.sh:*)",
      "Bash(./scripts/dev-logs.sh:*)",
      "Bash(./scripts/deploy-medical-prod.sh:*)",
      "Bash(./scripts/backup-postgresql.sh:*)",
      "Bash(./scripts/restore-postgresql.sh:*)",
      
      "Bash(pytest:*)",
      "Bash(coverage:*)",
      "Bash(jest:*)",
      "Bash(cypress:*)",
      
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(supervisorctl:*)",
      "Bash(brew list:*)",
      "Bash(brew install:*)",
      "Bash(apt-get:*)",
      "Bash(yum:*)",
      
      "Bash(aws:*)",
      "Bash(aws ec2:*)",
      "Bash(aws ec2 describe-instances:*)",
      "Bash(aws ec2 describe-instance-status:*)",
      "Bash(aws ec2 start-instances:*)",
      "Bash(aws ec2 stop-instances:*)",
      "Bash(aws ec2 reboot-instances:*)",
      "Bash(aws ec2 run-instances:*)",
      "Bash(aws ec2 terminate-instances:*)",
      "Bash(aws ec2 create-security-group:*)",
      "Bash(aws ec2 authorize-security-group-ingress:*)",
      "Bash(aws ec2 revoke-security-group-ingress:*)",
      "Bash(aws ec2 create-key-pair:*)",
      "Bash(aws ec2 describe-key-pairs:*)",
      "Bash(aws ec2 allocate-address:*)",
      "Bash(aws ec2 associate-address:*)",
      "Bash(aws ec2 disassociate-address:*)",
      "Bash(aws ec2 release-address:*)",
      "Bash(aws ec2 create-volume:*)",
      "Bash(aws ec2 attach-volume:*)",
      "Bash(aws ec2 detach-volume:*)",
      "Bash(aws ec2 describe-volumes:*)",
      "Bash(aws ec2 modify-instance-attribute:*)",
      "Bash(aws ec2 wait:*)",
      "Bash(aws rds:*)",
      "Bash(aws rds describe-db-instances:*)",
      "Bash(aws rds create-db-instance:*)",
      "Bash(aws rds create-db-snapshot:*)",
      "Bash(aws rds restore-db-instance-from-db-snapshot:*)",
      "Bash(aws s3:*)",
      "Bash(aws s3 ls:*)",
      "Bash(aws s3 cp:*)",
      "Bash(aws s3 sync:*)",
      "Bash(aws s3 mb:*)",
      "Bash(aws iam:*)",
      "Bash(aws iam list-attached-user-policies:*)",
      "Bash(aws iam attach-user-policy:*)",
      "Bash(aws iam create-user:*)",
      "Bash(aws iam create-role:*)",
      "Bash(aws ssm:*)",
      "Bash(aws ssm get-parameter:*)",
      "Bash(aws ssm put-parameter:*)",
      "Bash(aws logs:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws logs tail:*)",
      
      "Bash(ssh:*)",
      "Bash(scp:*)",
      "Bash(rsync:*)",
      "Bash(openssl:*)",
      "Bash(gpg:*)",
      
      "Bash(for:*)",
      "Bash(while:*)",
      "Bash(do:*)",
      "Bash(done)",
      "Bash(if:*)",
      "Bash(then:*)",
      "Bash(else:*)",
      "Bash(fi)",
      "Bash(bash:*)",
      
      "Read(/Users/stephanerichard/Documents/CODING/**)",
      "Read(/Users/stephanerichard/.ssh/**)"
    ],
    
    "deny": [
      "Bash(rm -rf /:*)",
      "Bash(chmod 777:*)",
      "Bash(*patient*data* > /tmp:*)",
      "Bash(*medical*records* > /dev:*)",
      "Bash(*phi* > /tmp:*)"
    ],
    
    "ask": [
      "Bash(python manage.py migrate --database=production:*)",
      "Bash(./scripts/deploy-production.sh:*)",
      "Bash(docker system prune -a:*)",
      "Bash(*patient* > *:*)",
      "Bash(*medical* > *:*)",
      "Bash(pg_dump *patient*:*)",
      "Bash(dropdb *:*)",
      "Bash(createdb *production*:*)"
    ]
  }
}